apiVersion: install.istio.io/v1alpha1
kind: IstioOperator
spec:
  revision: "asm-managed"
  profile: asm-gcp
  hub: gcr.io/gke-release/asm # {"$ref":"#/definitions/io.k8s.cli.setters.anthos.servicemesh.hub"}
  tag: 1.14.6-asm.4 # {"$ref":"#/definitions/io.k8s.cli.setters.anthos.servicemesh.tag"}
  components:
    base:
      enabled: false
    pilot:
      enabled: false
    cni:
      enabled: false
    istiodRemote:
      enabled: false
    ingressGateways:
    - enabled: true
      name: istio-ingressgateway
      label:
        app: istio-ingressgateway
        istio: ingressgateway
  meshConfig:
    trustDomain: "prj-zeld-deku.svc.id.goog" # {"$ref":"#/definitions/io.k8s.cli.substitutions.trust-domain"}
    defaultConfig:
      proxyMetadata:
        CA_ROOT_CA: "/etc/ssl/certs/ca-certificates.crt"
        XDS_ROOT_CA: "/etc/ssl/certs/ca-certificates.crt"
        OUTPUT_CERTS: "/etc/istio/proxy"
        XDS_AUTH_PROVIDER: "gcp"
        XDS_HEADER_Cloud-Run-Enable-H2: "y"
        ISTIO_META_CLOUDRUN_ADDR: "ISTIO_CLOUDRUN_ADDR" # {"$ref":"#/definitions/io.k8s.cli.setters.anthos.servicemesh.managed-controlplane.cloudrun-addr"}
  values:
    gateways:
      istio-ingressgateway:
        runAsRoot: true
    global:
      sds:
        token:
          aud: "prj-zeld-deku.svc.id.goog" # {"$ref":"#/definitions/io.k8s.cli.substitutions.trust-domain"}
      meshID: "proj-1072243555576" # {"$ref":"#/definitions/io.k8s.cli.substitutions.mesh-id"}
      multiCluster:
        clusterName: "cn-prj-zeld-deku-us-central1-c-gke-prod" # {"$ref":"#/definitions/io.k8s.cli.substitutions.cluster-name"}
