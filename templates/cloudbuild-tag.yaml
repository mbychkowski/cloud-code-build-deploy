# Copyright 2023 Google LLC All Rights Reserved.
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

steps:
- id: 'repoBuildConfirmation'
  name: 'alpine'
  entrypoint: 'sh'
  dir: /workspace
  args:
  - '-c'
  - |
      echo "***********************"
      echo "$PROJECT_ID"
      echo "$REPO_NAME"
      echo "$BRANCH_NAME"
      echo "$_IMAGE_TAG"
      echo "$_ACTION"
      echo "$LOCATION"
      echo "$SHORT_SHA"
      echo "***********************"

- id: 'cloudDeployDev'
  name: gcr.io/cloud-builders/gcloud
  entrypoint: bash
  dir: /workspace
  args:
  - '-c'
  - |
      gcloud deploy releases create "$_DEPLOY_PIPELINE-$SHORT_SHA"  \
        --delivery-pipeline="$_DEPLOY_PIPELINE" \
        --skaffold-file="apps/$_DEPLOY_PIPELINE/skaffold.yaml" \
        --skaffold-version="2.0" \
        --images=$LOCATION-docker.pkg.dev/$PROJECT_ID/$_ARTIFACT_REPO_NAME/be00=$_IMAGE_TAG \
        --region="$LOCATION" &&
        echo "$_DEPLOY_PIPELINE-$SHORT_SHA" > "$_RELEASE_FILE_PATH"

- name: 'gcr.io/cloud-builders/kubectl'
  id: 'waitForDeployDev'
  timeout: 300s
  args:
  - --namespace=${_DEPLOY_PIPELINE}-dev
  - rollout
  - status
  - deployment
  - ${_DEPLOY_PIPELINE}
  env:
  - 'CLOUDSDK_COMPUTE_ZONE=${_CLUSTER_DEV_LOC}'
  - 'CLOUDSDK_CONTAINER_CLUSTER=${_CLUSTER_DEV_NAME}'

- id: 'testsForDev'
  name: 'alpine'
  entrypoint: 'sh'
  dir: /workspace
  waitFor:
  - waitForDeployDev
  args:
  - '-c'
  - |
      echo "***********************"
      echo "Tests could go here"
      cat $_RELEASE_FILE_PATH
      echo "***********************"

- id: 'cloudDeployCanary'
  name: gcr.io/cloud-builders/gcloud
  entrypoint: bash
  dir: /workspace
  waitFor:
  - testsForDev
  args:
  - '-c'
  - |
      gcloud deploy releases promote --to-target "canary" \
        --release=$_DEPLOY_PIPELINE-$SHORT_SHA \
        --region=$LOCATION \
        --delivery-pipeline=$_DEPLOY_PIPELINE \
        --quiet

- name: 'gcr.io/cloud-builders/kubectl'
  id: 'waitForDeployCanary'
  timeout: 300s
  args:
  - --namespace=${_DEPLOY_PIPELINE}-prod
  - rollout
  - status
  - deployment
  - ${_DEPLOY_PIPELINE}-canary
  env:
  - 'CLOUDSDK_COMPUTE_ZONE=${_CLUSTER_PROD_LOC}'
  - 'CLOUDSDK_CONTAINER_CLUSTER=${_CLUSTER_PROD_NAME}'

- id: 'cloudDeployProd'
  name: gcr.io/cloud-builders/gcloud
  entrypoint: bash
  dir: /workspace
  waitFor:
  - waitForDeployCanary
  args:
  - '-c'
  - |
      gcloud deploy releases promote --to-target "prod" \
        --release=$_DEPLOY_PIPELINE-$SHORT_SHA \
        --region=$LOCATION \
        --delivery-pipeline=$_DEPLOY_PIPELINE \
        --quiet

options:
  # This allows for missing ENV variables.
  substitution_option: 'ALLOW_LOOSE'
substitutions:
  _ARTIFACT_REPO_NAME: ${ARTIFACT_REPO_NAME}
  _RELEASE_FILE_PATH: /workspace/.cb.releasename
